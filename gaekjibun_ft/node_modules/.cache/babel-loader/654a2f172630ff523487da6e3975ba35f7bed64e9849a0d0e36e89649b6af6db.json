{"ast":null,"code":"var _jsxFileName = \"/Users/dusehd1/KMU/3-1/gjb_ft/front/src/pages/RecipePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./RecipePage.css\";\nimport { postRecipe } from \"../apis/getFoodAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecipePage = ({\n  location,\n  recipeFood\n}) => {\n  _s();\n  const {\n    state\n  } = location || {};\n  const {\n    selectedItems\n  } = state || {};\n  const [recipeData, setRecipeData] = useState([\"레시피 로딩 중...\"]);\n  const recipeBoxRef = useRef(null);\n  const handleCopy = () => {\n    if (recipeBoxRef.current) {\n      const range = document.createRange();\n      range.selectNodeContents(recipeBoxRef.current);\n      const selection = window.getSelection();\n      selection.removeAllRanges();\n      selection.addRange(range);\n      document.execCommand(\"copy\");\n      alert(\"레시피 내용이 복사되었습니다!\");\n    }\n  };\n  async function getRecipeData(foods) {\n    try {\n      const result = await postRecipe(foods);\n      console.log(result);\n      return result;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  useEffect(() => {\n    if (!recipeFood) {\n      setRecipeData(\"음식을 선택하고 레시피 검색 버튼을 눌러주세요.\");\n    } else {}\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RecipePage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RecipeHeader\",\n      children: recipeFood && recipeFood.length > 0 && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" \", recipeFood.join(\", \"), \"\\uC744 \\uC774\\uC6A9\\uD55C \\uB808\\uC2DC\\uD53C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RecipeBox\",\n      ref: recipeBoxRef,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: recipeData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"copyButton\",\n      onClick: handleCopy,\n      children: \"\\uBCF5\\uC0AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: selectedItems && selectedItems.map((itemName, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: itemName\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(RecipePage, \"zXG+4BX37+GE0Cm4sxuZXtI+SyI=\");\n_c = RecipePage;\nexport default RecipePage;\nvar _c;\n$RefreshReg$(_c, \"RecipePage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","postRecipe","jsxDEV","_jsxDEV","RecipePage","location","recipeFood","_s","state","selectedItems","recipeData","setRecipeData","recipeBoxRef","handleCopy","current","range","document","createRange","selectNodeContents","selection","window","getSelection","removeAllRanges","addRange","execCommand","alert","getRecipeData","foods","result","console","log","error","className","children","length","join","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","map","itemName","index","_c","$RefreshReg$"],"sources":["/Users/dusehd1/KMU/3-1/gjb_ft/front/src/pages/RecipePage.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport \"./RecipePage.css\";\nimport { postRecipe } from \"../apis/getFoodAPI\";\n\nconst RecipePage = ({ location, recipeFood }) => {\n  const { state } = location || {};\n  const { selectedItems } = state || {};\n  const [recipeData, setRecipeData] = useState([\"레시피 로딩 중...\"]);\n\n  const recipeBoxRef = useRef(null);\n\n  const handleCopy = () => {\n    if (recipeBoxRef.current) {\n      const range = document.createRange();\n      range.selectNodeContents(recipeBoxRef.current);\n      const selection = window.getSelection();\n      selection.removeAllRanges();\n      selection.addRange(range);\n      document.execCommand(\"copy\");\n      alert(\"레시피 내용이 복사되었습니다!\");\n    }\n  };\n  async function getRecipeData(foods) {\n    try {\n      const result = await postRecipe(foods);\n      console.log(result);\n      return result;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  useEffect(() => {\n    if (!recipeFood) {\n      setRecipeData(\"음식을 선택하고 레시피 검색 버튼을 눌러주세요.\");\n    } else {\n    }\n  }, []);\n\n  return (\n    <div className=\"RecipePage\">\n      <div className=\"RecipeHeader\">\n        {recipeFood && recipeFood.length > 0 && (\n          <h2> {recipeFood.join(\", \")}을 이용한 레시피</h2>\n        )}\n      </div>\n      <div className=\"RecipeBox\" ref={recipeBoxRef}>\n        <p>{recipeData}</p>\n      </div>\n      <button className=\"copyButton\" onClick={handleCopy}>\n        복사\n      </button>\n      <ul>\n        {selectedItems &&\n          selectedItems.map((itemName, index) => (\n            <li key={index}>{itemName}</li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default RecipePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}