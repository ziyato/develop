{"ast":null,"code":"var _jsxFileName = \"/Users/dusehd1/KMU/3-1/gjb_ft/front/src/pages/Homepage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./HomePage.css\";\nimport { headers, FoodTable } from \"../components/FoodTable.jsx\";\nimport pic1 from \"../assets/햇반.jpg\";\nimport pic2 from \"../assets/카레.jpg\";\nimport pic3 from \"../assets/된찌.jpg\";\nimport pic4 from \"../assets/마라탕.jpg\";\nimport pic5 from \"../assets/탕후루.jpg\";\nimport ToastModal from \"../components/ToastModal/ToastModal\";\nimport { deleteFoodData, getFoodDataAll, getSearchFood } from \"../apis/getFoodAPI.js\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = ({\n  user,\n  setRecipeFood\n}) => {\n  _s();\n  const navigate = useNavigate(); // useNavigate 훅 사용\n  const [items, setItems] = useState([]); // 초기 아이템(식품) 상태를 빈 배열로 설정\n  const [searchCategory, setSearchCategory] = useState(\"food_name\"); // 검색 기준 초기값 식품명으로 설정\n  const [searchKeyword, setSearchKeyword] = useState(\"\"); // 검색 키워드 상태를 빈 문자열로 설정\n  const [selectedFoodNames, setSelectedFoodNames] = useState([]);\n  const [selectedFoodID, setSelectedFoodID] = useState([]);\n  const [sortCriteria, setSortCriteria] = useState(\"expiration_date\"); // 정렬 기준 초기값 유통기한으로 설정\n  const [sortDirection, setSortDirection] = useState(true); // 정렬 방향 초기값 오름차순으로 설\n\n  const [isModalOpen, setModalOpen] = useState(false);\n  const changeModal = () => setModalOpen(!isModalOpen);\n\n  // 검색 키워드 변경 시 호출되는 함수\n  const handleSearchKeywordChange = e => {\n    setSearchKeyword(e.target.value);\n  };\n  const handleRecipeSearch = () => {\n    setRecipeFood(selectedFoodNames); // 선택된 음식 이름을 설정\n    navigate(\"/recipe\"); // /recipe 페이지로 이동\n  };\n\n  //첫 실행 시 DB에서 데이터 받아오기\n  const fetchData = async () => {\n    try {\n      const foodData = await getDataFromDB(user.user_id); // 식품 데이터 받아오기\n      const sortedData = sortItems(foodData, sortCriteria, sortDirection); // 초기 식품 데이터 정렬 (유통기한 기준, 오름차순)\n      setItems(sortedData); // 아이템 상태 업데이트\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // DB에서 검색한 데이터를 가져오기\n  async function searchData(user_id, searchCategory, searchKeyword) {\n    console.log(searchKeyword);\n    console.log(searchKeyword.trim());\n    try {\n      const result = await getSearchFood(user_id, searchCategory, searchKeyword.trim());\n      setItems(result);\n      console.log(result);\n      return result;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  // DB에서 유저의 전체 음식 데이터를 가져오는 비동기 함수\n  async function getDataFromDB(user_id) {\n    if (user !== null) {\n      try {\n        const result = await getFoodDataAll(user_id);\n        console.log(result);\n        return result;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n  // 정렬 기준, 방향에 맞게 정렬하는 함수\n  const sortItems = (items, criteria, direction) => {\n    return items.sort((a, b) => {\n      if (criteria === \"expiration_date\") {\n        return direction ? new Date(a[criteria]) - new Date(b[criteria]) : new Date(b[criteria]) - new Date(a[criteria]); // 정렬 기준이 유통기한이면 날짜 비교\n      } else {\n        return direction ? a[criteria].localeCompare(b[criteria]) : b[criteria].localeCompare(a[criteria]); // 정렬 기준이 식품명 or 카테고리면 문자열 비교\n      }\n    });\n  };\n\n  // 아이템 삭제, 삭제 후 아이템 상태 업데이트 기능 함수\n  const handleDelete = selectedItems => {\n    const selectedItemIds = selectedItems.map(item => item.food_id); // 선택된 항목의 food_id 배열 생성\n    // 선택된 항목 제외한 나머지 항목 필터링\n    setItems(items.filter(item => !selectedItemIds.includes(item.food_id))); // 상태 업데이트\n  };\n  const addItem = newItem => {\n    // 현재 식품 목록 중 가장 최근에 등록된 식품의 food_id 찾기\n    const latestFoodId = items.length > 0 ? Math.max(...items.map(item => item.food_id)) : 0;\n    // 새로 등록될 식품의 food_id\n    newItem.food_id = latestFoodId + 1;\n    // 새로운 아이템 추가한 아이템 배열\n    let updatedItems = [...items, newItem];\n    // 정렬 기준 기본값에 따라 다시 정렬한 아이템 배열\n    updatedItems = sortItems(updatedItems, sortCriteria, sortDirection);\n    setItems(updatedItems);\n  };\n  const deleteItem = selectedFoodID => {\n    selectedFoodID.map(food_id => {\n      deleteFoodData(user.user_id, food_id);\n    });\n  };\n  useEffect(() => {\n    fetchData();\n  }, []); // user_id 변경 시에만 데이터 다시 로드?\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"HomePage\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-amber-500\",\n      onClick: () => setItems(data),\n      children: \"\\uC784\\uC2DC \\uC74C\\uC2DD \\uCD94\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => console.log(selectedFoodNames),\n      children: \"'\\uC74C\\uC2DD\\uC774\\uB984'\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => console.log(selectedFoodID),\n      children: \"'\\uC74C\\uC2DDID'\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchSection\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"dropdown\",\n        onChange: e => setSearchCategory(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"food_name\",\n          children: \"\\uC2DD\\uD488\\uBA85\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"category\",\n          children: \"\\uCE74\\uD14C\\uACE0\\uB9AC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"searchBar\",\n        value: searchKeyword,\n        onChange: handleSearchKeywordChange\n        //   onKeyPress={(e) => e.key === \"Enter\" && searchData(searchCategory, searchKeyword)}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"searchButton\",\n        onClick: () => {\n          searchData(user.user_id, searchCategory, searchKeyword);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tableInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \\uD83D\\uDC64 \", user.username, \" \\uB2D8\\uC758 \\uB0C9\\uC7A5\\uACE0 \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"recipeSearch\",\n          onClick: () => {\n            handleRecipeSearch();\n          },\n          children: \"\\uB808\\uC2DC\\uD53C \\uAC80\\uC0C9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"deleteFood\"\n          //수정 필요\n          ,\n          onClick: () => {\n            deleteItem(selectedFoodID);\n          },\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"foodTableComponent\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scrollableBox\",\n        children: /*#__PURE__*/_jsxDEV(FoodTable, {\n          headers: headers,\n          items: items,\n          setItems: setItems,\n          onDelete: handleDelete,\n          user: user,\n          sortItems: sortItems,\n          sortCriteria: sortCriteria,\n          sortDirection: sortDirection,\n          setSortCriteria: setSortCriteria,\n          setSortDirection: setSortDirection,\n          setSelectedFoodNames: setSelectedFoodNames,\n          setSelectedFoodID: setSelectedFoodID\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addFood\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeModal,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToastModal, {\n        isOpen: isModalOpen,\n        onClose: changeModal,\n        addItem: addItem,\n        user_id: user.user_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"MBaX1JxJx6Gi88FsgH3mvhyluJw=\", false, function () {\n  return [useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\n\n// 식품 데이터 예시\nexport const data = [{\n  food_id: 1,\n  food_name: \"햇반\",\n  food_pic: pic1,\n  category: \"밥\",\n  item_amount: 1,\n  purchase_date: \"2024-02-19T15:00:00.000Z\",\n  expiration_date: \"2024-12-11T15:00:00.000Z\",\n  user_id: 4\n}, {\n  food_id: 2,\n  food_name: \"카레이름\",\n  food_pic: pic2,\n  category: \"카테카테\",\n  item_amount: 2,\n  purchase_date: \"2024-04-09T15:00:00.000Z\",\n  expiration_date: \"2024-05-17T15:00:00.000Z\",\n  user_id: 4\n}, {\n  food_id: 3,\n  food_name: \"육회비빔밥\",\n  food_pic: \"\",\n  category: \"밥\",\n  item_amount: 1,\n  purchase_date: \"2024-05-17T15:00:00.000Z\",\n  expiration_date: \"2024-05-22T15:00:00.000Z\",\n  user_id: 4\n}, {\n  food_id: 4,\n  food_name: \"된장찌개\",\n  food_pic: pic3,\n  category: \"국\",\n  item_amount: 1,\n  purchase_date: \"2024-05-19T15:00:00.000Z\",\n  expiration_date: \"2024-06-07T15:00:00.000Z\",\n  user_id: 4\n}, {\n  food_id: 5,\n  food_name: \"마라탕\",\n  food_pic: pic4,\n  category: \"탕\",\n  item_amount: 1,\n  purchase_date: \"2024-05-15T15:00:00.000Z\",\n  expiration_date: \"2024-06-01T15:00:00.000Z\",\n  user_id: 4\n}, {\n  food_id: 6,\n  food_name: \"탕후루\",\n  food_pic: pic5,\n  category: \"간식\",\n  item_amount: 4,\n  purchase_date: \"2024-05-16T15:00:00.000Z\",\n  expiration_date: \"2024-05-25T15:00:00.000Z\",\n  user_id: 4\n}];\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","headers","FoodTable","pic1","pic2","pic3","pic4","pic5","ToastModal","deleteFoodData","getFoodDataAll","getSearchFood","useNavigate","jsxDEV","_jsxDEV","HomePage","user","setRecipeFood","_s","navigate","items","setItems","searchCategory","setSearchCategory","searchKeyword","setSearchKeyword","selectedFoodNames","setSelectedFoodNames","selectedFoodID","setSelectedFoodID","sortCriteria","setSortCriteria","sortDirection","setSortDirection","isModalOpen","setModalOpen","changeModal","handleSearchKeywordChange","e","target","value","handleRecipeSearch","fetchData","foodData","getDataFromDB","user_id","sortedData","sortItems","error","console","searchData","log","trim","result","criteria","direction","sort","a","b","Date","localeCompare","handleDelete","selectedItems","selectedItemIds","map","item","food_id","filter","includes","addItem","newItem","latestFoodId","length","Math","max","updatedItems","deleteItem","className","children","onClick","data","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","username","onDelete","isOpen","onClose","_c","food_name","food_pic","category","item_amount","purchase_date","expiration_date","$RefreshReg$"],"sources":["/Users/dusehd1/KMU/3-1/gjb_ft/front/src/pages/Homepage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./HomePage.css\";\nimport { headers, FoodTable } from \"../components/FoodTable.jsx\";\n\nimport pic1 from \"../assets/햇반.jpg\";\nimport pic2 from \"../assets/카레.jpg\";\nimport pic3 from \"../assets/된찌.jpg\";\nimport pic4 from \"../assets/마라탕.jpg\";\nimport pic5 from \"../assets/탕후루.jpg\";\nimport ToastModal from \"../components/ToastModal/ToastModal\";\nimport {\n  deleteFoodData,\n  getFoodDataAll,\n  getSearchFood,\n} from \"../apis/getFoodAPI.js\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst HomePage = ({ user, setRecipeFood }) => {\n  const navigate = useNavigate(); // useNavigate 훅 사용\n  const [items, setItems] = useState([]); // 초기 아이템(식품) 상태를 빈 배열로 설정\n  const [searchCategory, setSearchCategory] = useState(\"food_name\"); // 검색 기준 초기값 식품명으로 설정\n  const [searchKeyword, setSearchKeyword] = useState(\"\"); // 검색 키워드 상태를 빈 문자열로 설정\n  const [selectedFoodNames, setSelectedFoodNames] = useState([]);\n  const [selectedFoodID, setSelectedFoodID] = useState([]);\n\n  const [sortCriteria, setSortCriteria] = useState(\"expiration_date\"); // 정렬 기준 초기값 유통기한으로 설정\n  const [sortDirection, setSortDirection] = useState(true); // 정렬 방향 초기값 오름차순으로 설\n\n  const [isModalOpen, setModalOpen] = useState(false);\n  const changeModal = () => setModalOpen(!isModalOpen);\n\n  // 검색 키워드 변경 시 호출되는 함수\n  const handleSearchKeywordChange = (e) => {\n    setSearchKeyword(e.target.value);\n  };\n\n  const handleRecipeSearch = () => {\n    setRecipeFood(selectedFoodNames); // 선택된 음식 이름을 설정\n    navigate(\"/recipe\"); // /recipe 페이지로 이동\n  };\n\n  //첫 실행 시 DB에서 데이터 받아오기\n  const fetchData = async () => {\n    try {\n      const foodData = await getDataFromDB(user.user_id); // 식품 데이터 받아오기\n      const sortedData = sortItems(foodData, sortCriteria, sortDirection); // 초기 식품 데이터 정렬 (유통기한 기준, 오름차순)\n      setItems(sortedData); // 아이템 상태 업데이트\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // DB에서 검색한 데이터를 가져오기\n  async function searchData(user_id, searchCategory, searchKeyword) {\n    console.log(searchKeyword);\n    console.log(searchKeyword.trim());\n    try {\n      const result = await getSearchFood(\n        user_id,\n        searchCategory,\n        searchKeyword.trim()\n      );\n      setItems(result);\n      console.log(result);\n      return result;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  // DB에서 유저의 전체 음식 데이터를 가져오는 비동기 함수\n  async function getDataFromDB(user_id) {\n    if (user !== null) {\n      try {\n        const result = await getFoodDataAll(user_id);\n        console.log(result);\n        return result;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n  // 정렬 기준, 방향에 맞게 정렬하는 함수\n  const sortItems = (items, criteria, direction) => {\n    return items.sort((a, b) => {\n      if (criteria === \"expiration_date\") {\n        return direction\n          ? new Date(a[criteria]) - new Date(b[criteria])\n          : new Date(b[criteria]) - new Date(a[criteria]); // 정렬 기준이 유통기한이면 날짜 비교\n      } else {\n        return direction\n          ? a[criteria].localeCompare(b[criteria])\n          : b[criteria].localeCompare(a[criteria]); // 정렬 기준이 식품명 or 카테고리면 문자열 비교\n      }\n    });\n  };\n\n  // 아이템 삭제, 삭제 후 아이템 상태 업데이트 기능 함수\n  const handleDelete = (selectedItems) => {\n    const selectedItemIds = selectedItems.map((item) => item.food_id); // 선택된 항목의 food_id 배열 생성\n    // 선택된 항목 제외한 나머지 항목 필터링\n    setItems(items.filter((item) => !selectedItemIds.includes(item.food_id))); // 상태 업데이트\n  };\n\n  const addItem = (newItem) => {\n    // 현재 식품 목록 중 가장 최근에 등록된 식품의 food_id 찾기\n    const latestFoodId =\n      items.length > 0 ? Math.max(...items.map((item) => item.food_id)) : 0;\n    // 새로 등록될 식품의 food_id\n    newItem.food_id = latestFoodId + 1;\n    // 새로운 아이템 추가한 아이템 배열\n    let updatedItems = [...items, newItem];\n    // 정렬 기준 기본값에 따라 다시 정렬한 아이템 배열\n    updatedItems = sortItems(updatedItems, sortCriteria, sortDirection);\n    setItems(updatedItems);\n  };\n\n  const deleteItem = (selectedFoodID) => {\n    selectedFoodID.map((food_id) => {\n      deleteFoodData(user.user_id, food_id);\n    });\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []); // user_id 변경 시에만 데이터 다시 로드?\n\n  return (\n    <div className=\"HomePage\">\n      <button className=\"bg-amber-500\" onClick={() => setItems(data)}>\n        임시 음식 추가\n      </button>\n      <button onClick={() => console.log(selectedFoodNames)}>'음식이름'</button>\n      <button onClick={() => console.log(selectedFoodID)}>'음식ID'</button>\n      <div className=\"searchSection\">\n        {/* 검색 기준 선택할 수 있는 드롭다운 */}\n        <select\n          className=\"dropdown\"\n          onChange={(e) => setSearchCategory(e.target.value)}\n        >\n          <option value=\"food_name\">식품명</option>\n          <option value=\"category\">카테고리</option>\n        </select>\n        <input\n          type=\"text\"\n          className=\"searchBar\"\n          value={searchKeyword}\n          onChange={handleSearchKeywordChange}\n          //   onKeyPress={(e) => e.key === \"Enter\" && searchData(searchCategory, searchKeyword)}\n        />\n        <button\n          type=\"button\"\n          className=\"searchButton\"\n          onClick={() => {\n            searchData(user.user_id, searchCategory, searchKeyword);\n          }}\n        />\n      </div>\n      <div className=\"tableInfo\">\n        <span> 👤 {user.username} 님의 냉장고 </span>\n        <div>\n          <button\n            type=\"button\"\n            className=\"recipeSearch\"\n            onClick={() => {\n              handleRecipeSearch();\n            }}\n          >\n            레시피 검색\n          </button>\n          <button\n            type=\"button\"\n            className=\"deleteFood\"\n            //수정 필요\n            onClick={() => {\n              deleteItem(selectedFoodID);\n            }}\n          >\n            삭제\n          </button>\n        </div>\n      </div>\n      <div className=\"foodTableComponent\">\n        <div className=\"scrollableBox\">\n          <FoodTable\n            headers={headers}\n            items={items}\n            setItems={setItems}\n            onDelete={handleDelete}\n            user={user}\n            sortItems={sortItems}\n            sortCriteria={sortCriteria}\n            sortDirection={sortDirection}\n            setSortCriteria={setSortCriteria}\n            setSortDirection={setSortDirection}\n            setSelectedFoodNames={setSelectedFoodNames}\n            setSelectedFoodID={setSelectedFoodID}\n          />\n        </div>\n      </div>\n      <div className=\"addFood\">\n        <button onClick={changeModal}>+</button>\n        <ToastModal\n          isOpen={isModalOpen}\n          onClose={changeModal}\n          addItem={addItem}\n          user_id={user.user_id}\n        />\n      </div>\n    </div>\n  );\n};\nexport default HomePage;\n\n// 식품 데이터 예시\nexport const data = [\n  {\n    food_id: 1,\n    food_name: \"햇반\",\n    food_pic: pic1,\n    category: \"밥\",\n    item_amount: 1,\n    purchase_date: \"2024-02-19T15:00:00.000Z\",\n    expiration_date: \"2024-12-11T15:00:00.000Z\",\n    user_id: 4,\n  },\n  {\n    food_id: 2,\n    food_name: \"카레이름\",\n    food_pic: pic2,\n    category: \"카테카테\",\n    item_amount: 2,\n    purchase_date: \"2024-04-09T15:00:00.000Z\",\n    expiration_date: \"2024-05-17T15:00:00.000Z\",\n    user_id: 4,\n  },\n  {\n    food_id: 3,\n    food_name: \"육회비빔밥\",\n    food_pic: \"\",\n    category: \"밥\",\n    item_amount: 1,\n    purchase_date: \"2024-05-17T15:00:00.000Z\",\n    expiration_date: \"2024-05-22T15:00:00.000Z\",\n    user_id: 4,\n  },\n  {\n    food_id: 4,\n    food_name: \"된장찌개\",\n    food_pic: pic3,\n    category: \"국\",\n    item_amount: 1,\n    purchase_date: \"2024-05-19T15:00:00.000Z\",\n    expiration_date: \"2024-06-07T15:00:00.000Z\",\n    user_id: 4,\n  },\n  {\n    food_id: 5,\n    food_name: \"마라탕\",\n    food_pic: pic4,\n    category: \"탕\",\n    item_amount: 1,\n    purchase_date: \"2024-05-15T15:00:00.000Z\",\n    expiration_date: \"2024-06-01T15:00:00.000Z\",\n    user_id: 4,\n  },\n  {\n    food_id: 6,\n    food_name: \"탕후루\",\n    food_pic: pic5,\n    category: \"간식\",\n    item_amount: 4,\n    purchase_date: \"2024-05-16T15:00:00.000Z\",\n    expiration_date: \"2024-05-25T15:00:00.000Z\",\n    user_id: 4,\n  },\n];\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}