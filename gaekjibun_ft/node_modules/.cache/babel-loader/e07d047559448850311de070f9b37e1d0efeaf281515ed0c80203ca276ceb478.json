{"ast":null,"code":"// front/src/components/FoodTable.jsx\nimport React,{useState,useEffect}from\"react\";import{useNavigate}from\"react-router-dom\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const headers=[{text:\"사진\",value:\"food_pic\"},{text:\"식품명\",value:\"food_name\"},{text:\"카테고리\",value:\"category\"},{text:\"유통기한\",value:\"expiration_date\"},{text:\"수량\",value:\"food_amount\"}];// 남은 일수 계산하는 함수\nexport const calculateDaysLeft=expirationDate=>{const today=new Date();const expireDate=new Date(expirationDate);today.setUTCHours(0,0,0,0);// 현재 날짜 시간을 00:00:00으로 설정\nexpireDate.setUTCHours(0,0,0,0);// 유통기한 날짜 시간 00:00:00으로 설정\nconst remainingTime=Math.ceil((expireDate-today)/(1000*60*60*24));// 남은 일수 계산\nreturn remainingTime;};function FoodTable(_ref){let{headers,items,setItems,onDelete,user,sortItems,sortCriteria,sortDirection,setSortCriteria,setSortDirection,setSelectedFoodNames,setSelectedFoodID}=_ref;const navigate=useNavigate();const{alert_date}=user;const[selection,setSelection]=useState([]);// 선택된 항목들 관리하는 state, food_id 담김\nconst[notifications,setNotifications]=useState([]);const headerKey=headers.map(header=>header.value);// 헤더의 value 값 배열로 변환\n// 정렬 함수\nconst handleSort=criteria=>{// 현재 정렬 기준과 같은 경우 방향 반대로, 다른 경우는 오름차순으로 설정\nconst newDirection=criteria===sortCriteria?!sortDirection:true;setSortCriteria(criteria);// 새로운 정렬 기준 설정\nsetSortDirection(newDirection);// 새로운 정렬 방향 설정\nconst sortedItems=sortItems(items,criteria,newDirection);// 정렬된 아이템 리스트 반환\nsetSelection([]);// 정렬 후 선택 상태 초기화\nreturn sortedItems;// 정렬된 아이템 반환\n};// 유통기한이 지난 아이템을 찾아 알림에 추가하는 함수\nuseEffect(()=>{const expiredItems=items.filter(item=>calculateDaysLeft(item.expiration_date)<0);const expiredNotifications=expiredItems.map(item=>\"\\uC720\\uD1B5\\uAE30\\uD55C\\uC774 \\uC9C0\\uB09C \\uC2DD\\uD488: \".concat(item.food_name));setNotifications(expiredNotifications);},[items]);// items 배열이 업데이트될 때마다 실행\n// 헤더 렌더링 함수 + 정렬 기능\nconst renderHeaderWithSort=()=>{return headers.map(header=>/*#__PURE__*/_jsxs(\"th\",{children:[header.text,header.text===\"식품명\"||header.text===\"카테고리\"||header.text===\"유통기한\"?/*#__PURE__*/_jsx(\"button\",{style:{paddingLeft:\"10px\"},onClick:()=>handleSort(header.value),children:items.length===0?\"↕\":sortCriteria===header.value?sortDirection?\"▲\":\"▼\":\"↕\"}):null]},header.text));};// 삭제 버튼 클릭 시 호출되는 함수\nconst handleDelete=()=>{const selectedItems=items.filter(item=>selection.includes(item.food_id));// 선택된 항목만 필터링하여 배열 생성\nonDelete(selectedItems);// 선택된 항목 삭제\nsetSelection([]);// 선택 상태 초기화\n// 체크박스 선택 해제\nconst checkboxes=document.querySelectorAll('.foodTable tbody input[type=\"checkbox\"]');checkboxes.forEach(checkbox=>{checkbox.checked=false;});};// FoodTable에 handleDelete 함수 연결\nFoodTable.handleDelete=handleDelete;// 체크박스 선택 상태 변경 함수\nconst onChangeSelect=food_id=>{let newSelection;if(selection.includes(food_id)){newSelection=selection.filter(selected_id=>selected_id!==food_id);// 이미 선택된 항목이면 선택 해제\n}else{newSelection=[...selection,food_id];// 선택되지 않은 항목이면 선택 추가\n}setSelection(newSelection);// 선택 상태 업데이트\nsetSelectedFoodNames(newSelection.map(id=>items.find(item=>item.food_id===id).food_name));setSelectedFoodID(newSelection.map(id=>items.find(item=>item.food_id===id).food_id));};// 전체 선택 체크박스 상태 변경 함수\nconst onChangeSelectAll=e=>{if(e.target.checked){const allCheckedSelection=items.map(item=>item.food_id);// 모든 아이템의 food_id 배열 추출\nsetSelection(allCheckedSelection);// 전체 선택 상태\n}else{setSelection([]);// 선택 해제 상태\n}};// 전체 선택 여부 확인 함수\nconst isSelectedAll=()=>{return items.length>0&&selection.length===items.length;};// 각 행 클릭 시 상세 페이지로 이동하는 함수\nconst handleRowClick=food_id=>{navigate(\"/food/\".concat(food_id));};return/*#__PURE__*/_jsx(\"div\",{className:\"tableContainer\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"foodTable\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"tableHeader\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:isSelectedAll(),onChange:onChangeSelectAll})}),renderHeaderWithSort()]})}),/*#__PURE__*/_jsx(\"tbody\",{children:items.length===0?/*#__PURE__*/_jsx(\"tr\",{className:\"noItemsRow\",style:{height:\"100%\",border:\"\"},children:/*#__PURE__*/_jsx(\"td\",{colSpan:headers.length+1,style:{border:\"none\",textAlign:\"center\",padding:\"0\",fontSize:\"16px\",height:\"570px\",verticalAlign:\"middle\"},children:\"\\uB4F1\\uB85D\\uB41C \\uC2DD\\uD488\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"})}):items.map((item,index)=>/*#__PURE__*/_jsxs(\"tr\",{className:selection.includes(item.food_id)?\"select_row\":\"\",style:{cursor:\"pointer\"},onClick:()=>handleRowClick(item.food_id)// 행 클릭 시 상세 페이지로 이동\n,children:[/*#__PURE__*/_jsx(\"td\",{onClick:e=>e.stopPropagation(),style:{cursor:\"default\"},children:/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:selection.includes(item.food_id),onChange:e=>{onChangeSelect(item.food_id);}})}),headerKey.map((key,idx)=>/*#__PURE__*/_jsx(\"td\",{style:{// 알림 기준 일수보다 남은 일수가 적으면 배경색 변경\nbackgroundColor:key===\"expiration_date\"?calculateDaysLeft(item.expiration_date)<=alert_date?\"#FFCDCD\":\"transparent\":\"transparent\"},children:key===\"food_pic\"?item[key]?/*#__PURE__*/_jsx(\"img\",{src:item[key],alt:\"\",style:{width:\"120px\",height:\"100px\"}}):/*#__PURE__*/_jsx(\"div\",{style:{width:\"100%\",height:\"100px\",display:\"flex\",alignItems:\"center\",justifyContent:\"center\",fontSize:\"15px\"},children:\"No Images\"}):key===\"expiration_date\"?/*#__PURE__*/ // 유통기한 관련 정보 출력\n_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"span\",{className:\"expirationDateText\",children:[item[key].split(\"T\")[0],\" \",/*#__PURE__*/_jsx(\"br\",{})]}),calculateDaysLeft(item.expiration_date)<0&&/*#__PURE__*/ // 유통기한 지난 경우\n_jsxs(\"span\",{style:{color:\"red\"},children:[\"(\\uC720\\uD1B5\\uAE30\\uD55C \\uC9C0\\uB0A8, D+\",Math.abs(calculateDaysLeft(item.expiration_date)),\")\"]}),calculateDaysLeft(item.expiration_date)>=0&&/*#__PURE__*/_jsxs(_Fragment,{children:[calculateDaysLeft(item.expiration_date)<=alert_date&&/*#__PURE__*/ // 유통기한 안 지났지만 알림 기준 일수보다 남은 일수가 적은 경우\n_jsxs(\"span\",{style:{color:\"red\"},children:[\" \",\"(D-\",calculateDaysLeft(item.expiration_date),\")\"]}),calculateDaysLeft(item.expiration_date)>alert_date&&/*#__PURE__*/_jsxs(\"span\",{children:[\" \",\"(D-\",calculateDaysLeft(item.expiration_date),\")\"]})]})]}):item[key]},idx))]},index))})]})});}export{headers,FoodTable};","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","headers","text","value","calculateDaysLeft","expirationDate","today","Date","expireDate","setUTCHours","remainingTime","Math","ceil","FoodTable","_ref","items","setItems","onDelete","user","sortItems","sortCriteria","sortDirection","setSortCriteria","setSortDirection","setSelectedFoodNames","setSelectedFoodID","navigate","alert_date","selection","setSelection","notifications","setNotifications","headerKey","map","header","handleSort","criteria","newDirection","sortedItems","expiredItems","filter","item","expiration_date","expiredNotifications","concat","food_name","renderHeaderWithSort","children","style","paddingLeft","onClick","length","handleDelete","selectedItems","includes","food_id","checkboxes","document","querySelectorAll","forEach","checkbox","checked","onChangeSelect","newSelection","selected_id","id","find","onChangeSelectAll","e","target","allCheckedSelection","isSelectedAll","handleRowClick","className","type","onChange","height","border","colSpan","textAlign","padding","fontSize","verticalAlign","index","cursor","stopPropagation","key","idx","backgroundColor","src","alt","width","display","alignItems","justifyContent","split","color","abs"],"sources":["/Users/dusehd1/KMU/3-1/gjb_ft/front/src/components/FoodTable.jsx"],"sourcesContent":["// front/src/components/FoodTable.jsx\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst headers = [\n  { text: \"사진\", value: \"food_pic\" },\n  { text: \"식품명\", value: \"food_name\" },\n  { text: \"카테고리\", value: \"category\" },\n  { text: \"유통기한\", value: \"expiration_date\" },\n  { text: \"수량\", value: \"food_amount\" },\n];\n\n// 남은 일수 계산하는 함수\nexport const calculateDaysLeft = (expirationDate) => {\n  const today = new Date();\n  const expireDate = new Date(expirationDate);\n  today.setUTCHours(0, 0, 0, 0); // 현재 날짜 시간을 00:00:00으로 설정\n  expireDate.setUTCHours(0, 0, 0, 0); // 유통기한 날짜 시간 00:00:00으로 설정\n  const remainingTime = Math.ceil((expireDate - today) / (1000 * 60 * 60 * 24)); // 남은 일수 계산\n  return remainingTime;\n};\n\nfunction FoodTable({\n  headers,\n  items,\n  setItems,\n  onDelete,\n  user,\n  sortItems,\n  sortCriteria,\n  sortDirection,\n  setSortCriteria,\n  setSortDirection,\n\n  setSelectedFoodNames,\n  setSelectedFoodID,\n}) {\n  const navigate = useNavigate();\n  const { alert_date } = user;\n  const [selection, setSelection] = useState([]); // 선택된 항목들 관리하는 state, food_id 담김\n  const [notifications, setNotifications] = useState([]);\n  const headerKey = headers.map((header) => header.value); // 헤더의 value 값 배열로 변환\n\n  // 정렬 함수\n  const handleSort = (criteria) => {\n    // 현재 정렬 기준과 같은 경우 방향 반대로, 다른 경우는 오름차순으로 설정\n    const newDirection = criteria === sortCriteria ? !sortDirection : true;\n    setSortCriteria(criteria); // 새로운 정렬 기준 설정\n    setSortDirection(newDirection); // 새로운 정렬 방향 설정\n    const sortedItems = sortItems(items, criteria, newDirection); // 정렬된 아이템 리스트 반환\n    setSelection([]); // 정렬 후 선택 상태 초기화\n    return sortedItems; // 정렬된 아이템 반환\n  };\n\n  // 유통기한이 지난 아이템을 찾아 알림에 추가하는 함수\n  useEffect(() => {\n    const expiredItems = items.filter(\n      (item) => calculateDaysLeft(item.expiration_date) < 0\n    );\n    const expiredNotifications = expiredItems.map(\n      (item) => `유통기한이 지난 식품: ${item.food_name}`\n    );\n    setNotifications(expiredNotifications);\n  }, [items]); // items 배열이 업데이트될 때마다 실행\n\n  // 헤더 렌더링 함수 + 정렬 기능\n  const renderHeaderWithSort = () => {\n    return headers.map((header) => (\n      <th key={header.text}>\n        {header.text}\n        {header.text === \"식품명\" ||\n        header.text === \"카테고리\" ||\n        header.text === \"유통기한\" ? (\n          <button\n            style={{ paddingLeft: \"10px\" }}\n            onClick={() => handleSort(header.value)}\n          >\n            {items.length === 0\n              ? \"↕\"\n              : sortCriteria === header.value\n              ? sortDirection\n                ? \"▲\"\n                : \"▼\"\n              : \"↕\"}\n          </button>\n        ) : null}\n      </th>\n    ));\n  };\n  // 삭제 버튼 클릭 시 호출되는 함수\n  const handleDelete = () => {\n    const selectedItems = items.filter((item) =>\n      selection.includes(item.food_id)\n    ); // 선택된 항목만 필터링하여 배열 생성\n    onDelete(selectedItems); // 선택된 항목 삭제\n    setSelection([]); // 선택 상태 초기화\n\n    // 체크박스 선택 해제\n    const checkboxes = document.querySelectorAll(\n      '.foodTable tbody input[type=\"checkbox\"]'\n    );\n    checkboxes.forEach((checkbox) => {\n      checkbox.checked = false;\n    });\n  };\n\n  // FoodTable에 handleDelete 함수 연결\n  FoodTable.handleDelete = handleDelete;\n\n  // 체크박스 선택 상태 변경 함수\n  const onChangeSelect = (food_id) => {\n    let newSelection;\n    if (selection.includes(food_id)) {\n      newSelection = selection.filter((selected_id) => selected_id !== food_id); // 이미 선택된 항목이면 선택 해제\n    } else {\n      newSelection = [...selection, food_id]; // 선택되지 않은 항목이면 선택 추가\n    }\n    setSelection(newSelection); // 선택 상태 업데이트\n    setSelectedFoodNames(\n      newSelection.map(\n        (id) => items.find((item) => item.food_id === id).food_name\n      )\n    );\n    setSelectedFoodID(\n      newSelection.map(\n        (id) => items.find((item) => item.food_id === id).food_id\n      )\n    );\n  };\n\n  // 전체 선택 체크박스 상태 변경 함수\n  const onChangeSelectAll = (e) => {\n    if (e.target.checked) {\n      const allCheckedSelection = items.map((item) => item.food_id); // 모든 아이템의 food_id 배열 추출\n      setSelection(allCheckedSelection); // 전체 선택 상태\n    } else {\n      setSelection([]); // 선택 해제 상태\n    }\n  };\n\n  // 전체 선택 여부 확인 함수\n  const isSelectedAll = () => {\n    return items.length > 0 && selection.length === items.length;\n  };\n\n  // 각 행 클릭 시 상세 페이지로 이동하는 함수\n  const handleRowClick = (food_id) => {\n    navigate(`/food/${food_id}`);\n  };\n\n  return (\n    <div className=\"tableContainer\">\n      <table className=\"foodTable\">\n        <thead className=\"tableHeader\">\n          <tr>\n            <th>\n              <input\n                type=\"checkbox\"\n                checked={isSelectedAll()}\n                onChange={onChangeSelectAll}\n              />\n            </th>\n            {renderHeaderWithSort()}\n          </tr>\n        </thead>\n        <tbody>\n          {/* 아이템 없는 경우 화면에 없다고 표시 */}\n          {items.length === 0 ? (\n            <tr className=\"noItemsRow\" style={{ height: \"100%\", border: \"\" }}>\n              <td\n                colSpan={headers.length + 1}\n                style={{\n                  border: \"none\",\n                  textAlign: \"center\",\n                  padding: \"0\",\n                  fontSize: \"16px\",\n                  height: \"570px\",\n                  verticalAlign: \"middle\",\n                }}\n              >\n                등록된 식품이 없습니다.\n              </td>\n            </tr>\n          ) : (\n            items.map((item, index) => (\n              <tr\n                key={index}\n                className={selection.includes(item.food_id) ? \"select_row\" : \"\"}\n                style={{ cursor: \"pointer\" }}\n                onClick={() => handleRowClick(item.food_id)} // 행 클릭 시 상세 페이지로 이동\n              >\n                <td\n                  onClick={(e) => e.stopPropagation()}\n                  style={{ cursor: \"default\" }}\n                >\n                  <input\n                    type=\"checkbox\"\n                    checked={selection.includes(item.food_id)}\n                    onChange={(e) => {\n                      onChangeSelect(item.food_id);\n                    }}\n                  />\n                </td>\n                {headerKey.map((key, idx) => (\n                  <td\n                    key={idx}\n                    style={{\n                      // 알림 기준 일수보다 남은 일수가 적으면 배경색 변경\n                      backgroundColor:\n                        key === \"expiration_date\"\n                          ? calculateDaysLeft(item.expiration_date) <=\n                            alert_date\n                            ? \"#FFCDCD\"\n                            : \"transparent\"\n                          : \"transparent\",\n                    }}\n                  >\n                    {key === \"food_pic\" ? (\n                      item[key] ? (\n                        <img\n                          src={item[key]}\n                          alt=\"\"\n                          style={{ width: \"120px\", height: \"100px\" }}\n                        />\n                      ) : (\n                        <div\n                          style={{\n                            width: \"100%\",\n                            height: \"100px\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                            fontSize: \"15px\",\n                          }}\n                        >\n                          No Images\n                        </div>\n                      )\n                    ) : key === \"expiration_date\" ? (\n                      // 유통기한 관련 정보 출력\n                      <>\n                        <span className=\"expirationDateText\">\n                          {item[key].split(\"T\")[0]} {/* 날짜만 표시 */}\n                          <br />\n                        </span>\n                        {calculateDaysLeft(item.expiration_date) < 0 && (\n                          // 유통기한 지난 경우\n                          <span style={{ color: \"red\" }}>\n                            (유통기한 지남, D+\n                            {Math.abs(calculateDaysLeft(item.expiration_date))})\n                          </span>\n                        )}\n                        {calculateDaysLeft(item.expiration_date) >= 0 && (\n                          <>\n                            {calculateDaysLeft(item.expiration_date) <=\n                              alert_date && (\n                              // 유통기한 안 지났지만 알림 기준 일수보다 남은 일수가 적은 경우\n                              <span style={{ color: \"red\" }}>\n                                {\" \"}\n                                (D-{calculateDaysLeft(item.expiration_date)})\n                              </span>\n                            )}\n                            {calculateDaysLeft(item.expiration_date) >\n                              alert_date && (\n                              <span>\n                                {\" \"}\n                                (D-{calculateDaysLeft(item.expiration_date)})\n                              </span>\n                            )}\n                          </>\n                        )}\n                      </>\n                    ) : (\n                      item[key]\n                    )}\n                  </td>\n                ))}\n              </tr>\n            ))\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport { headers, FoodTable };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}